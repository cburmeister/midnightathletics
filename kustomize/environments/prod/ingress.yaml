apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt-prod
    kubernetes.io/ingress.class: nginx
  name: midnightathletics
spec:
  rules:
  - host: midnightathletics.com
    http:
      paths:
      - backend:
          serviceName: app
          servicePort: http
        path: /
  tls:
  - hosts:
    - midnightathletics.com
    secretName: midnightathletics-tls
---
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt-prod
    kubernetes.io/ingress.class: nginx
  name: midnightathletics-www
spec:
  rules:
  - host: www.midnightathletics.com
    http:
      paths:
      - backend:
          serviceName: app
          servicePort: http
        path: /
  tls:
  - hosts:
    - www.midnightathletics.com
    secretName: midnightathletics-www-tls
---
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt-prod
    kubernetes.io/ingress.class: nginx
  name: radio-midnightathletics
spec:
  rules:
  - host: radio.midnightathletics.com
    http:
      paths:
      - backend:
          serviceName: icecast
          servicePort: http
        path: /
  tls:
  - hosts:
    - radio.midnightathletics.com
    secretName: radio-midnightathletics-tls
---
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt-prod
    kubernetes.io/ingress.class: nginx
  name: blog-midnightathletics
spec:
  rules:
  - host: blog.midnightathletics.com
    http:
      paths:
      - backend:
          serviceName: ghost
          servicePort: http
        path: /
  tls:
  - hosts:
    - blog.midnightathletics.com
    secretName: blog-midnightathletics-tls
